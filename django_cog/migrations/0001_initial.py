# Generated by Django 5.2.1 on 2025-05-29 17:06

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('django_celery_beat', '0019_alter_periodictasks_options'),
    ]

    operations = [
        migrations.CreateModel(
            name='CeleryQueue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('queue_name', models.CharField(max_length=4096)),
            ],
        ),
        migrations.CreateModel(
            name='Cog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=4096)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CogErrorHandler',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=4096)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EntityRun',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('started_on', models.DateTimeField(auto_now_add=True)),
                ('completed_on', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('Queued', 'Queued'), ('Running', 'Running'), ('Failed', 'Failed'), ('Completed', 'Completed'), ('Canceled', 'Canceled')], default='Queued', max_length=10, null=True)),
            ],
            options={
                'ordering': ['-completed_on', '-started_on'],
            },
        ),
        migrations.CreateModel(
            name='Pipeline',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=4096)),
                ('enabled', models.BooleanField(default=True)),
                ('prevent_overlapping_runs', models.BooleanField(default=True)),
                ('schedule', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='django_celery_beat.crontabschedule')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Stage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=4096)),
                ('launch_after_stage', models.ManyToManyField(blank=True, related_name='next_stage', to='django_cog.stage')),
                ('pipeline', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stages', to='django_cog.pipeline')),
            ],
            options={
                'ordering': ['pipeline', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, max_length=4096, null=True)),
                ('arguments_as_json', models.TextField(blank=True, null=True)),
                ('prevent_overlapping_calls', models.BooleanField(default=True)),
                ('enabled', models.BooleanField(default=True)),
                ('weight', models.DecimalField(decimal_places=5, default=1.0, max_digits=12)),
                ('critical', models.BooleanField(default=True)),
                ('cog', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assigned_tasks', to='django_cog.cog')),
                ('error_handler', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tasks', to='django_cog.cogerrorhandler')),
                ('queue', models.ForeignKey(default=1, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_tasks', to='django_cog.celeryqueue')),
                ('stage', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assigned_tasks', to='django_cog.stage')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PipelineRun',
            fields=[
                ('entityrun_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='django_cog.entityrun')),
                ('success', models.BooleanField(null=True)),
                ('pipeline', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='runs', to='django_cog.pipeline')),
            ],
            options={
                'abstract': False,
            },
            bases=('django_cog.entityrun',),
        ),
        migrations.CreateModel(
            name='StageRun',
            fields=[
                ('entityrun_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='django_cog.entityrun')),
                ('success', models.BooleanField(null=True)),
                ('pipeline_run', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stage_runs', to='django_cog.pipelinerun')),
                ('stage', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='runs', to='django_cog.stage')),
            ],
            options={
                'abstract': False,
            },
            bases=('django_cog.entityrun',),
        ),
        migrations.CreateModel(
            name='TaskRun',
            fields=[
                ('entityrun_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='django_cog.entityrun')),
                ('success', models.BooleanField(null=True)),
                ('stage_run', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='task_runs', to='django_cog.stagerun')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='runs', to='django_cog.task')),
            ],
            options={
                'abstract': False,
            },
            bases=('django_cog.entityrun',),
        ),
        migrations.CreateModel(
            name='CogError',
            fields=[
                ('timestamp', models.DateTimeField(auto_created=True, auto_now_add=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('error_type', models.CharField(blank=True, max_length=1024, null=True)),
                ('traceback', models.TextField(blank=True, null=True)),
                ('task_run', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='errors', to='django_cog.taskrun')),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
    ]
